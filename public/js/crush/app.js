/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./resources/js/frontend/js-raw/app.js":
/*!*********************************************!*\
  !*** ./resources/js/frontend/js-raw/app.js ***!
  \*********************************************/
/***/ (() => {

    eval("function _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\n(function () {\n  var myDoc = document;\n  var header = myDoc.querySelector('.header-min');\n  var sticky = header.offsetTop;\n  //console.log(header);\n  var onScroll = function onScroll() {\n    // const scroll = document.documentElement.scrollTop;\n    // console.log(scroll);\n    if (window.scrollY > sticky) {\n      header.classList.add(\"sticky\");\n\n      // Close child menus when sticky class is added and viewport is >= 992px\n      if (window.innerWidth >= 992) {\n        myDoc.querySelectorAll('.child-menu').forEach(function (menu) {\n          menu.classList.remove('active');\n        });\n      }\n    } else {\n      header.classList.remove(\"sticky\");\n    }\n  };\n  window.addEventListener('scroll', onScroll);\n  var CurrentUrl = window.location.origin + window.location.pathname;\n  myDoc.querySelectorAll('.nav-min-menu a, .nav-min-menu-mobile a').forEach(function (link) {\n    if (link.href === CurrentUrl) {\n      var parent = link.parentElement;\n      if (parent) {\n        parent.classList.add('active');\n      }\n    }\n  });\n  myDoc.querySelectorAll('.nav-min-menu > .have-child > a, .nav-min-menu-mobile > .have-child > a').forEach(function (element) {\n    element.addEventListener('click', function (event) {\n      event.preventDefault();\n\n      // Remove active class from sibling child menus\n      var siblings = this.parentElement.parentElement.children;\n      Array.from(siblings).forEach(function (sibling) {\n        if (sibling !== element.parentElement) {\n          var _childMenu = sibling.querySelector('.child-menu');\n          if (_childMenu) {\n            _childMenu.classList.remove('active');\n          }\n        }\n      });\n\n      // Toggle active class on the current child menu\n      var childMenu = this.parentElement.querySelector('.child-menu');\n      if (childMenu) {\n        childMenu.classList.toggle('active');\n      }\n\n      // Check window width and adjust nav-min-close position if less than 992px\n      if (window.innerWidth < 992) {\n        setTimeout(function () {\n          var navMinClose = myDoc.querySelector('.nav-min-close');\n          if (navMinClose) {\n            navMinClose.style.position = 'fixed';\n          }\n        }, 250);\n      }\n    });\n  });\n\n  // Close child menu\n  myDoc.querySelectorAll('.child-menu-close span, .have-child-Loc').forEach(function (element) {\n    element.addEventListener('click', function () {\n      myDoc.querySelectorAll('.child-menu').forEach(function (menu) {\n        menu.classList.remove('active');\n      });\n      var parent = this.closest('.have-child');\n      if (parent) {\n        parent.classList.remove('active');\n      }\n    });\n  });\n\n  // Open navigation menu\n  // myDoc.querySelector('.header-min-navToggle').addEventListener('click', function () {\n  //     const navMin = myDoc.querySelector('.nav-min');\n  //     if (navMin) {\n  //         navMin.classList.add('active');\n  //     }\n  // });\n\n  var navToggle = myDoc.querySelector('.header-min-navToggle');\n  if (navToggle) {\n    navToggle.addEventListener('click', function () {\n      var navMin = myDoc.querySelector('.nav-min');\n      if (navMin) {\n        navMin.classList.add('active');\n      }\n    });\n  }\n\n  // Close navigation menu\n  // myDoc.querySelector('.nav-min-close').addEventListener('click', function () {\n  //     const navMin = this.closest('.nav-min');\n  //     if (navMin) {\n  //         navMin.classList.remove('active');\n  //     }\n  //     this.style.position = 'absolute';\n\n  //     myDoc.querySelectorAll('.child-menu').forEach(function (menu) {\n  //         menu.classList.remove('active');\n  //     });\n  // });\n\n  var navMinClose = myDoc.querySelector('.nav-min-close');\n  if (navMinClose) {\n    navMinClose.addEventListener('click', function () {\n      var navMin = this.closest('.nav-min');\n      if (navMin) {\n        navMin.classList.remove('active');\n      }\n      this.style.position = 'absolute';\n      myDoc.querySelectorAll('.child-menu').forEach(function (menu) {\n        menu.classList.remove('active');\n      });\n    });\n  }\n  myDoc.addEventListener('click', function (event) {\n    // Check if the click is NOT inside .child-menu or on .have-child > a\n    if (!event.target.closest('.child-menu') && !event.target.closest('.have-child > a')) {\n      myDoc.querySelectorAll('.child-menu').forEach(function (menu) {\n        menu.classList.remove('active');\n      });\n    }\n  });\n\n  //input select dropdown selectted image needs to show on image tag\n  var imgTag = myDoc.querySelector('#bookImg');\n  if (imgTag) {\n    var prevSec = imgTag.src;\n    myDoc.addEventListener('change', function (event) {\n      if (event.target.classList.contains('select-img')) {\n        var img = event.target.options[event.target.selectedIndex].getAttribute('data-value');\n        if (img) {\n          imgTag.src = img;\n        } else {\n          imgTag.src = prevSec;\n        }\n      }\n    });\n  }\n  ;\n  var date = myDoc.querySelector('.date');\n  var datervw = myDoc.querySelector('.review-date');\n  var time = myDoc.querySelector('.time');\n  if (date) {\n    setTimeout(function () {\n      flatpickr(date, {\n        minDate: \"today\",\n        altFormat: \"F j, Y\",\n        maxDate: new Date().fp_incr(14) // 14 days from now\n      });\n    }, 1800);\n  }\n  if (datervw) {\n    setTimeout(function () {\n      flatpickr(datervw, {\n        altInput: true,\n        altFormat: \"F j, Y\",\n        dateFormat: \"Y-m-d\"\n      });\n    }, 1800);\n  }\n  if (time) {\n    setTimeout(function () {\n      flatpickr(time, {\n        enableTime: true,\n        noCalendar: true,\n        dateFormat: \"h:i\",\n        time_24hr: true\n      });\n    }, 1800);\n  }\n  var inputFilewrap = myDoc.querySelectorAll('.inputFile');\n  if (inputFilewrap) {\n    inputFilewrap.forEach(function (fileWrapper) {\n      var fileInput = fileWrapper.querySelector('input[type=\"file\"]');\n      var fileLabel = fileWrapper.querySelector('label[for=\"' + fileInput.id + '\"]'); // Selects the label for the file input\n\n      fileInput.addEventListener('change', function (event) {\n        if (event.target.files.length > 0) {\n          fileLabel.innerText = event.target.files[0].name;\n        } else {\n          fileLabel.innerText = 'No file chosen';\n        }\n      });\n    });\n  }\n\n  //accordion\n  var accordianBody = myDoc.querySelectorAll('.accordion-collapse');\n  if (accordianBody) {\n    Object.keys(accordianBody).forEach(function (key) {\n      accordianBody[key].addEventListener('shown.bs.collapse', function (e) {\n        //accordianBody[key].parentElement.classList.add('active');\n        console.log(accordianBody[key]);\n        e.stopPropagation();\n        var accorItem = e.target.closest('.accordion-item');\n        window.scrollTo({\n          top: accorItem.offsetTop - 100,\n          behavior: 'smooth'\n        });\n      });\n    });\n  }\n  var btnCollapse = myDoc.querySelectorAll('.rota-tags .collapse');\n  if (btnCollapse) {\n    Object.keys(btnCollapse).forEach(function (key) {\n      btnCollapse[key].addEventListener('shown.bs.collapse', function (e) {\n        //e.stopPropagation();\n        var accorItem = e.target.closest('.rota-tags');\n        console.log(accorItem);\n        window.scrollTo({\n          top: accorItem.offsetTop - 100,\n          behavior: 'smooth'\n        });\n      });\n    });\n  }\n\n  //Story\n  var getIframeUri = function getIframeUri(elements, condition) {\n    var elem = myDoc.querySelectorAll(elements);\n    Object.keys(elem).forEach(function (key) {\n      var iframe = elem[key].querySelector('iframe');\n      if (iframe) {\n        var src = iframe.getAttribute('src');\n        elem[key].setAttribute('href', \"\".concat(src));\n      }\n      if (condition === 'remove') {\n        elem[key].querySelector('iframe').remove();\n      }\n    });\n  };\n  getIframeUri('.gallery-single-banner-thumb.video a.prothumb', 'remove');\n  getIframeUri('.gallery-story-wrap .story-gal', 'remove');\n  Fancybox.bind('[data-fancybox=\"gallery-media\"]');\n  Fancybox.bind('[data-fancybox=\"stories\"]', {\n    Thumbs: false\n  });\n  myDoc.addEventListener(\"click\", function (e) {\n    var target = e.target.closest(\".btn-share\");\n    //console.log(target);\n    if (target) {\n      target.nextElementSibling.classList.toggle(\"show\");\n    }\n  });\n  copyPreviousSibling = function copyPreviousSibling(key) {\n    //console.log(key);\n    var copyText = myDoc.getElementById(\"input-\" + key);\n    copyText.select();\n    copyText.setSelectionRange(0, 99999);\n    if (navigator.clipboard && navigator.clipboard.writeText) {\n      navigator.clipboard.writeText(copyText.value).then(function () {\n        alert('Text copied to clipboard');\n      })[\"catch\"](function (err) {\n        alert('Failed to copy text: ', err);\n      });\n    } else {\n      console.error('Clipboard API not supported or writeText method is not available');\n    }\n    // console.log(copyText);\n    return false;\n  };\n\n  //prifile image slider with splider js\n  var profileImgSlider = myDoc.querySelector('.gallery-single-slider');\n  if (profileImgSlider) {\n    var splide = new Splide(profileImgSlider, {\n      pagination: true,\n      arrows: false,\n      autoplay: false,\n      interval: 3000,\n      fixedWidth: '318px',\n      fixedHeight: '463px',\n      trimSpace: 'move',\n      focus: 'center',\n      breakpoints: {\n        575: {\n          fixedWidth: '50%',\n          fixedHeight: '284px'\n        }\n      }\n    }).mount();\n    var liCounter = function liCounter() {\n      var dot = myDoc.querySelector('.splide__pagination');\n      dot.setAttribute('data-count', dot.querySelectorAll('li').length);\n      dot.querySelectorAll('li').forEach(function (item, index) {\n        item.querySelector('button').innerHTML = index + 1;\n      });\n    };\n    liCounter();\n    splide.on('resize', function () {\n      liCounter();\n    });\n  }\n  var slideOneItem = function slideOneItem(selectopArg, mediaObj) {\n    var selectedEle = myDoc.querySelectorAll(selectopArg);\n    if (selectedEle) {\n      Object.keys(selectedEle).forEach(function (ele) {\n        //console.log(galleryitem[ele]);\n        var sliderItem = selectedEle[ele].querySelector('.staff-gallery');\n        if (sliderItem) {\n          var splide = new Splide(sliderItem, _objectSpread({}, mediaObj));\n          splide.mount();\n        }\n      });\n    }\n  };\n  slideOneItem('.duo-profile', {\n    pagination: false,\n    autoplay: false,\n    rewind: true,\n    type: 'loop',\n    fixedHeight: '248px',\n    mediaQuery: 'min',\n    breakpoints: {\n      576: {\n        fixedHeight: '380px'\n      },\n      768: {\n        fixedHeight: '507px'\n      },\n      992: {\n        fixedHeight: '406px'\n      },\n      1200: {\n        fixedHeight: '463px'\n      }\n    }\n  });\n  slideOneItem('.gallery-item-duoSimilar', {\n    pagination: false,\n    autoplay: false,\n    gap: '10px',\n    focus: 0,\n    omitEnd: true,\n    mediaQuery: 'min',\n    classes: {\n      arrows: 'splide__arrows position-absolute duoArrows d-flex align-items-center end-0',\n      arrow: 'splide__arrow position-relative',\n      prev: 'splide__arrow--prev start-0',\n      next: 'splide__arrow--next end-0 ms-2'\n    },\n    breakpoints: {\n      576: {\n        fixedWidth: '348px'\n      }\n    }\n  });\n  var formGroup = myDoc.querySelectorAll('.input__field');\n  if (formGroup) {\n    Object.keys(formGroup).forEach(function (i) {\n      formGroup[i].addEventListener('blur', function (e) {\n        if (e.target.value !== '') {\n          e.target.classList.add('hasVal');\n        } else {\n          e.target.classList.remove('hasVal');\n        }\n      });\n    });\n  }\n  Fancybox.bind('.single-profile');\n  var sliderEl = myDoc.querySelector(\"#range\");\n  if (sliderEl) {\n    var sliderValue = myDoc.querySelector(\".value\");\n    var setSliderBg = function setSliderBg(targetEle) {\n      //console.log(targetEle.value);\n      var progress = targetEle.value / targetEle.max * 100;\n      sliderEl.style.background = \"linear-gradient(to right, #E3149D \".concat(progress, \"%, #707070 \").concat(progress, \"%)\");\n    };\n    setSliderBg(sliderEl);\n    //console.log(sliderEl.max);\n\n    sliderEl.addEventListener(\"input\", function (event) {\n      var tempSliderValue = event.target.value;\n      sliderValue.textContent = \"\\xA3\".concat(tempSliderValue);\n      setSliderBg(event.target);\n    });\n  }\n  var review_tab = myDoc.querySelector(\".review_tab\");\n  if (review_tab) {\n    var splide = new Splide(review_tab, {\n      pagination: false,\n      arrows: false,\n      autoplay: false,\n      type: 'loop',\n      destroy: true,\n      breakpoints: {\n        767: {\n          perPage: 2,\n          destroy: false,\n          gap: 10,\n          fixedWidth: '216px'\n        }\n      }\n    });\n    splide.mount();\n  }\n})();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/js/frontend/js-raw/app.js\n");

    /***/ }),
    
    /***/ "./resources/css/frontend/scss/main.scss":
    /*!***********************************************!*\
      !*** ./resources/css/frontend/scss/main.scss ***!
      \***********************************************/
    /***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
    
    "use strict";
    eval("__webpack_require__.r(__webpack_exports__);\n// extracted by mini-css-extract-plugin\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9yZXNvdXJjZXMvY3NzL2Zyb250ZW5kL3Njc3MvbWFpbi5zY3NzIiwibWFwcGluZ3MiOiI7QUFBQSIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL3Jlc291cmNlcy9jc3MvZnJvbnRlbmQvc2Nzcy9tYWluLnNjc3M/NzkzYSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBleHRyYWN0ZWQgYnkgbWluaS1jc3MtZXh0cmFjdC1wbHVnaW5cbmV4cG9ydCB7fTsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./resources/css/frontend/scss/main.scss\n");
    
    /***/ }),
    
    /***/ "./resources/css/backend/scss/main.scss":
    /*!**********************************************!*\
      !*** ./resources/css/backend/scss/main.scss ***!
      \**********************************************/
    /***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
    
    "use strict";
    eval("__webpack_require__.r(__webpack_exports__);\n// extracted by mini-css-extract-plugin\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9yZXNvdXJjZXMvY3NzL2JhY2tlbmQvc2Nzcy9tYWluLnNjc3MiLCJtYXBwaW5ncyI6IjtBQUFBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vcmVzb3VyY2VzL2Nzcy9iYWNrZW5kL3Njc3MvbWFpbi5zY3NzPzE1OWIiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gZXh0cmFjdGVkIGJ5IG1pbmktY3NzLWV4dHJhY3QtcGx1Z2luXG5leHBvcnQge307Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./resources/css/backend/scss/main.scss\n");
    
    /***/ }),
    
    /***/ "./resources/css/frontend/scss/fonts.scss":
    /*!************************************************!*\
      !*** ./resources/css/frontend/scss/fonts.scss ***!
      \************************************************/
    /***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
    
    "use strict";
    eval("__webpack_require__.r(__webpack_exports__);\n// extracted by mini-css-extract-plugin\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9yZXNvdXJjZXMvY3NzL2Zyb250ZW5kL3Njc3MvZm9udHMuc2NzcyIsIm1hcHBpbmdzIjoiO0FBQUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9yZXNvdXJjZXMvY3NzL2Zyb250ZW5kL3Njc3MvZm9udHMuc2Nzcz8yN2I5Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIGV4dHJhY3RlZCBieSBtaW5pLWNzcy1leHRyYWN0LXBsdWdpblxuZXhwb3J0IHt9OyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./resources/css/frontend/scss/fonts.scss\n");
    
    /***/ })
    
    /******/ 	});
    /************************************************************************/
    /******/ 	// The module cache
    /******/ 	var __webpack_module_cache__ = {};
    /******/ 	
    /******/ 	// The require function
    /******/ 	function __webpack_require__(moduleId) {
    /******/ 		// Check if module is in cache
    /******/ 		var cachedModule = __webpack_module_cache__[moduleId];
    /******/ 		if (cachedModule !== undefined) {
    /******/ 			return cachedModule.exports;
    /******/ 		}
    /******/ 		// Create a new module (and put it into the cache)
    /******/ 		var module = __webpack_module_cache__[moduleId] = {
    /******/ 			// no module.id needed
    /******/ 			// no module.loaded needed
    /******/ 			exports: {}
    /******/ 		};
    /******/ 	
    /******/ 		// Execute the module function
    /******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
    /******/ 	
    /******/ 		// Return the exports of the module
    /******/ 		return module.exports;
    /******/ 	}
    /******/ 	
    /******/ 	// expose the modules object (__webpack_modules__)
    /******/ 	__webpack_require__.m = __webpack_modules__;
    /******/ 	
    /************************************************************************/
    /******/ 	/* webpack/runtime/chunk loaded */
    /******/ 	(() => {
    /******/ 		var deferred = [];
    /******/ 		__webpack_require__.O = (result, chunkIds, fn, priority) => {
    /******/ 			if(chunkIds) {
    /******/ 				priority = priority || 0;
    /******/ 				for(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];
    /******/ 				deferred[i] = [chunkIds, fn, priority];
    /******/ 				return;
    /******/ 			}
    /******/ 			var notFulfilled = Infinity;
    /******/ 			for (var i = 0; i < deferred.length; i++) {
    /******/ 				var [chunkIds, fn, priority] = deferred[i];
    /******/ 				var fulfilled = true;
    /******/ 				for (var j = 0; j < chunkIds.length; j++) {
    /******/ 					if ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {
    /******/ 						chunkIds.splice(j--, 1);
    /******/ 					} else {
    /******/ 						fulfilled = false;
    /******/ 						if(priority < notFulfilled) notFulfilled = priority;
    /******/ 					}
    /******/ 				}
    /******/ 				if(fulfilled) {
    /******/ 					deferred.splice(i--, 1)
    /******/ 					var r = fn();
    /******/ 					if (r !== undefined) result = r;
    /******/ 				}
    /******/ 			}
    /******/ 			return result;
    /******/ 		};
    /******/ 	})();
    /******/ 	
    /******/ 	/* webpack/runtime/hasOwnProperty shorthand */
    /******/ 	(() => {
    /******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
    /******/ 	})();
    /******/ 	
    /******/ 	/* webpack/runtime/make namespace object */
    /******/ 	(() => {
    /******/ 		// define __esModule on exports
    /******/ 		__webpack_require__.r = (exports) => {
    /******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
    /******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
    /******/ 			}
    /******/ 			Object.defineProperty(exports, '__esModule', { value: true });
    /******/ 		};
    /******/ 	})();
    /******/ 	
    /******/ 	/* webpack/runtime/jsonp chunk loading */
    /******/ 	(() => {
    /******/ 		// no baseURI
    /******/ 		
    /******/ 		// object to store loaded and loading chunks
    /******/ 		// undefined = chunk not loaded, null = chunk preloaded/prefetched
    /******/ 		// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded
    /******/ 		var installedChunks = {
    /******/ 			"/frontend/js/app": 0,
    /******/ 			"frontend/css/fonts": 0,
    /******/ 			"backend/css/main": 0,
    /******/ 			"frontend/css/main": 0
    /******/ 		};
    /******/ 		
    /******/ 		// no chunk on demand loading
    /******/ 		
    /******/ 		// no prefetching
    /******/ 		
    /******/ 		// no preloaded
    /******/ 		
    /******/ 		// no HMR
    /******/ 		
    /******/ 		// no HMR manifest
    /******/ 		
    /******/ 		__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);
    /******/ 		
    /******/ 		// install a JSONP callback for chunk loading
    /******/ 		var webpackJsonpCallback = (parentChunkLoadingFunction, data) => {
    /******/ 			var [chunkIds, moreModules, runtime] = data;
    /******/ 			// add "moreModules" to the modules object,
    /******/ 			// then flag all "chunkIds" as loaded and fire callback
    /******/ 			var moduleId, chunkId, i = 0;
    /******/ 			if(chunkIds.some((id) => (installedChunks[id] !== 0))) {
    /******/ 				for(moduleId in moreModules) {
    /******/ 					if(__webpack_require__.o(moreModules, moduleId)) {
    /******/ 						__webpack_require__.m[moduleId] = moreModules[moduleId];
    /******/ 					}
    /******/ 				}
    /******/ 				if(runtime) var result = runtime(__webpack_require__);
    /******/ 			}
    /******/ 			if(parentChunkLoadingFunction) parentChunkLoadingFunction(data);
    /******/ 			for(;i < chunkIds.length; i++) {
    /******/ 				chunkId = chunkIds[i];
    /******/ 				if(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {
    /******/ 					installedChunks[chunkId][0]();
    /******/ 				}
    /******/ 				installedChunks[chunkId] = 0;
    /******/ 			}
    /******/ 			return __webpack_require__.O(result);
    /******/ 		}
    /******/ 		
    /******/ 		var chunkLoadingGlobal = self["webpackChunk"] = self["webpackChunk"] || [];
    /******/ 		chunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));
    /******/ 		chunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));
    /******/ 	})();
    /******/ 	
    /************************************************************************/
    /******/ 	
    /******/ 	// startup
    /******/ 	// Load entry module and return exports
    /******/ 	// This entry module depends on other loaded chunks and execution need to be delayed
    /******/ 	__webpack_require__.O(undefined, ["frontend/css/fonts","backend/css/main","frontend/css/main"], () => (__webpack_require__("./resources/js/frontend/js-raw/app.js")))
    /******/ 	__webpack_require__.O(undefined, ["frontend/css/fonts","backend/css/main","frontend/css/main"], () => (__webpack_require__("./resources/css/frontend/scss/main.scss")))
    /******/ 	__webpack_require__.O(undefined, ["frontend/css/fonts","backend/css/main","frontend/css/main"], () => (__webpack_require__("./resources/css/backend/scss/main.scss")))
    /******/ 	var __webpack_exports__ = __webpack_require__.O(undefined, ["frontend/css/fonts","backend/css/main","frontend/css/main"], () => (__webpack_require__("./resources/css/frontend/scss/fonts.scss")))
    /******/ 	__webpack_exports__ = __webpack_require__.O(__webpack_exports__);
    /******/ 	
    /******/ })()
    ;